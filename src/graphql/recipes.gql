# TODO: Add a comment with each value on how much it is to it's base value
# TODO: Double check if any of this is uneccesary, might be better to start with a small amount and then work our way up
enum MeasurementType {
    # Volume - Base is liter
    TEASPOON
    TABLESPOON
    FLUIDOUNCE
    GILL
    CUP
    PINT
    QUART
    MILLILITER
    CENTERLITER
    DECILITER
    LITER

    # Weight - Base is gram
    POUND
    OUNCE
    MILLIGRAM
    GRAM
    KILOGRAM
}

type RecipeIngredient {
    id: ID!
    title: String
    description: String
    image: String
    measurementType: MeasurementType
    measurementValue: Float
}

type Recipe {
    id: ID!
    title: String
    description: String
    image: String
    ingredients: [RecipeIngredient]
}

input recipes_insert_input {
    description: String
    title: String
}

input recipe_set_input {
    description: String
    title: String
    image: String
}

input RecipeIngredientUpdateInput {
    id: ID!
    measurementType: MeasurementType
    measurementValue: Float
}

query FindAllRecipes {
    recipes {
        description
        id
        image
        title
        recipeIngredients {
            id
            measurementType
            measurementValue
            ingredient {
                description
                id
                image
                title
            }
        }
    }
}

query FindRecipeWithID($id: String!) {
    recipes(where: { id: { _eq: $id } }, limit: 1) {
        description
        id
        image
        title
        recipeIngredients {
            id
            measurementType
            measurementValue
            ingredient {
                description
                image
                id
                title
            }
        }
    }
}

mutation CreateRecipe($recipe: recipes_insert_input!) {
    insert_recipes(objects: [$recipe]) {
        returning {
            id
        }
    }
}

mutation UpdateRecipe($id: ID!, $recipe: RecipeUpdateInput!) {
    updateRecipe(id: $id, recipe: $recipe) {
        id
        description
        title
        image
        ingredients {
            id
            title
            description
            image
            measurementType
            measurementValue
        }
    }
}

mutation DeleteRecipe($id: ID!) {
    deleteRecipe(id: $id)
}

mutation AddRecipeIngredient($recipeId: String!, $ingredientId: String!) {
    insert_recipeIngredients(
        objects: [{ ingredientId: $ingredientId, recipeId: $recipeId }]
    ) {
        returning {
            id
            measurementType
            measurementValue
            ingredient {
                description
                image
                id
                title
            }
        }
    }
}

mutation RemoveRecipeIngredient($recipeIngredientId: String!) {
    delete_recipeIngredients(where: { id: { _eq: $recipeIngredientId } }) {
        affected_rows
    }
}
